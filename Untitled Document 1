import React, { useState } from 'react'
import './App.css'
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faTrash,faCirclePlus } from '@fortawesome/free-solid-svg-icons'


const App = () => {

    const [formValues, setFormValues] = useState([])
    const [show, setShow] = useState(false);
    const [fieldType, setFieldType] = useState('simple')

    const handleClose = () => setShow(false);
    const handleShow = () => setShow(true);

    let handleChange = (i, e) => {
        let newFormValues = [...formValues];
        newFormValues[i][e.target.name] = e.target.value;
        setFormValues(newFormValues);
      }
    
    let addFormFields = () => {
        setShow(false);
        setFormValues([...formValues, { name: "", type: fieldType, subValues: [ ] }])
      }
    
    let removeFormFields = (i) => {
        let newFormValues = [...formValues];
        newFormValues.splice(i, 1);
        setFormValues(newFormValues)
    }
    
    let handleSubmit = (event) => {
        event.preventDefault();
        alert(JSON.stringify(formValues));
    }
   
    return (
      <>
      <div className="bgpaper">
        <div >
          <Button variant="primary" className='Network'> Network </Button>
        </div>
        <div className="line-sep">
      </div>

        <Modal show={show} onHide={handleClose}>
          <Modal.Header closeButton>
            <Modal.Title>Modal heading</Modal.Title>
          </Modal.Header>
          <Modal.Body>
          <div>
            <input type="radio" value="simple" name="field" onChange={e=> setFieldType(e.target.value) } /> Simple
            <input type="radio" value="complex" name="field" onChange={e=> setFieldType(e.target.value) }/> Complex
          </div>
              </Modal.Body>
          <Modal.Footer>
            <Button variant="secondary" onClick={handleClose}>
              Close
            </Button>
            <Button variant="primary" onClick={() => addFormFields()}>
              Submit
            </Button>
          </Modal.Footer>
        </Modal>

        <form  onSubmit={handleSubmit} className="timeline">
          <ul>
            {formValues.map((element, index) => {
              return (
                <li>
                    <div className="component" key={index}>
                      <hr />
                      {element.type === 'simple' &&
                        <h2>Assess Structure</h2>
                      }
                      {element.type === 'complex' &&
                        <input 
                          type="text" 
                          name="name" 
                          value={element.name || ""} 
                          onChange={e => handleChange(index, e)} 
                        />
                      }
                      <div>
                      {
                        element.subValues.map((subElement, index) => {
                          return (<input key={index} type="text" name="name" value={subElement.name || ""} />);
                        })
                      }
                      </div>
                      
                      {
                        index ? 
                          <button type="button"  className="button remove" onClick={() => removeFormFields(index)}><FontAwesomeIcon icon={faTrash} /></button> 
                        : null
                      }
                    </div>
                  </li>
              );
            })}
          </ul>
          
          <div className="">
              <button className="button add" type="button" onClick={handleShow}><FontAwesomeIcon icon={faCirclePlus} /></button>
              {/* <button className="button submit" type="submit">Submit</button> */}
          </div>
        </form>
        </div>
      </>
    )
}

export default App
